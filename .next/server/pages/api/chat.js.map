{"version":3,"file":"pages/api/chat.js","mappings":"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","sources":["webpack://_N_E/./node_modules/eventsource-parser/dist/index.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/error.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/utils.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/get-hostname.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/next-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/request.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/spec-extension/response.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js","webpack://_N_E/./node_modules/next/dist/esm/server/internal-utils.js","webpack://_N_E/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js","webpack://_N_E/./node_modules/next/dist/esm/client/components/app-router-headers.js","webpack://_N_E/./node_modules/next/dist/esm/server/web/adapter.js","webpack://_N_E/","webpack://_N_E/./node_modules/eventsource-parser/dist/index.cjs.mjs","webpack://_N_E/./pages/api/chat.ts","webpack://_N_E/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js","webpack://_N_E/<anon>"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nfunction createParser(onParse) {\n  let isFirstChunk;\n  let buffer;\n  let startingPosition;\n  let startingFieldLength;\n  let eventId;\n  let eventName;\n  let data;\n  reset();\n  return {\n    feed,\n    reset\n  };\n  function reset() {\n    isFirstChunk = true;\n    buffer = \"\";\n    startingPosition = 0;\n    startingFieldLength = -1;\n    eventId = void 0;\n    eventName = void 0;\n    data = \"\";\n  }\n  function feed(chunk) {\n    buffer = buffer ? buffer + chunk : chunk;\n    if (isFirstChunk && hasBom(buffer)) {\n      buffer = buffer.slice(BOM.length);\n    }\n    isFirstChunk = false;\n    const length = buffer.length;\n    let position = 0;\n    let discardTrailingNewline = false;\n    while (position < length) {\n      if (discardTrailingNewline) {\n        if (buffer[position] === \"\\n\") {\n          ++position;\n        }\n        discardTrailingNewline = false;\n      }\n      let lineLength = -1;\n      let fieldLength = startingFieldLength;\n      let character;\n      for (let index = startingPosition; lineLength < 0 && index < length; ++index) {\n        character = buffer[index];\n        if (character === \":\" && fieldLength < 0) {\n          fieldLength = index - position;\n        } else if (character === \"\\r\") {\n          discardTrailingNewline = true;\n          lineLength = index - position;\n        } else if (character === \"\\n\") {\n          lineLength = index - position;\n        }\n      }\n      if (lineLength < 0) {\n        startingPosition = length - position;\n        startingFieldLength = fieldLength;\n        break;\n      } else {\n        startingPosition = 0;\n        startingFieldLength = -1;\n      }\n      parseEventStreamLine(buffer, position, fieldLength, lineLength);\n      position += lineLength + 1;\n    }\n    if (position === length) {\n      buffer = \"\";\n    } else if (position > 0) {\n      buffer = buffer.slice(position);\n    }\n  }\n  function parseEventStreamLine(lineBuffer, index, fieldLength, lineLength) {\n    if (lineLength === 0) {\n      if (data.length > 0) {\n        onParse({\n          type: \"event\",\n          id: eventId,\n          event: eventName || void 0,\n          data: data.slice(0, -1)\n          // remove trailing newline\n        });\n\n        data = \"\";\n        eventId = void 0;\n      }\n      eventName = void 0;\n      return;\n    }\n    const noValue = fieldLength < 0;\n    const field = lineBuffer.slice(index, index + (noValue ? lineLength : fieldLength));\n    let step = 0;\n    if (noValue) {\n      step = lineLength;\n    } else if (lineBuffer[index + fieldLength + 1] === \" \") {\n      step = fieldLength + 2;\n    } else {\n      step = fieldLength + 1;\n    }\n    const position = index + step;\n    const valueLength = lineLength - step;\n    const value = lineBuffer.slice(position, position + valueLength).toString();\n    if (field === \"data\") {\n      data += value ? \"\".concat(value, \"\\n\") : \"\\n\";\n    } else if (field === \"event\") {\n      eventName = value;\n    } else if (field === \"id\" && !value.includes(\"\\0\")) {\n      eventId = value;\n    } else if (field === \"retry\") {\n      const retry = parseInt(value, 10);\n      if (!Number.isNaN(retry)) {\n        onParse({\n          type: \"reconnect-interval\",\n          value: retry\n        });\n      }\n    }\n  }\n}\nconst BOM = [239, 187, 191];\nfunction hasBom(buffer) {\n  return BOM.every((charCode, index) => buffer.charCodeAt(index) === charCode);\n}\nexports.createParser = createParser;\n//# sourceMappingURL=index.js.map\n","export class PageSignatureError extends Error {\n    constructor({ page  }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nexport class RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nexport class RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n}\n\n//# sourceMappingURL=error.js.map","export function fromNodeHeaders(object) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(object)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (v !== undefined) {\n                headers.append(key, v);\n            }\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ export function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\nexport function toNodeHeaders(headers) {\n    const result = {};\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            result[key] = value;\n            if (key.toLowerCase() === \"set-cookie\") {\n                result[key] = splitCookiesString(value);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ export function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n}\n\n//# sourceMappingURL=utils.js.map","import { PageSignatureError } from \"../error\";\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nexport const waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    [waitUntilSymbol] = [];\n    [passThroughSymbol] = false;\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){}\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nexport class NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\n\n//# sourceMappingURL=fetch-event.js.map","export function detectDomainLocale(domainItems, hostname, detectedLocale) {\n    let domainItem;\n    if (domainItems) {\n        if (detectedLocale) {\n            detectedLocale = detectedLocale.toLowerCase();\n        }\n        for (const item of domainItems){\n            var ref, ref1;\n            // remove port if present\n            const domainHostname = (ref = item.domain) == null ? void 0 : ref.split(':')[0].toLowerCase();\n            if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((ref1 = item.locales) == null ? void 0 : ref1.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n                domainItem = item;\n                break;\n            }\n        }\n    }\n    return domainItem;\n}\n\n//# sourceMappingURL=detect-domain-locale.js.map","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ export function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, '') || '/';\n}\n\n//# sourceMappingURL=remove-trailing-slash.js.map","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ export function parsePath(path) {\n    const hashIndex = path.indexOf('#');\n    const queryIndex = path.indexOf('?');\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : '',\n            hash: hashIndex > -1 ? path.slice(hashIndex) : ''\n        };\n    }\n    return {\n        pathname: path,\n        query: '',\n        hash: ''\n    };\n}\n\n//# sourceMappingURL=parse-path.js.map","import { parsePath } from './parse-path';\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ export function addPathPrefix(path, prefix) {\n    if (!path.startsWith('/') || !prefix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${prefix}${pathname}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-prefix.js.map","import { parsePath } from './parse-path';\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ export function addPathSuffix(path, suffix) {\n    if (!path.startsWith('/') || !suffix) {\n        return path;\n    }\n    const { pathname , query , hash  } = parsePath(path);\n    return `${pathname}${suffix}${query}${hash}`;\n}\n\n//# sourceMappingURL=add-path-suffix.js.map","import { parsePath } from './parse-path';\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ export function pathHasPrefix(path, prefix) {\n    if (typeof path !== 'string') {\n        return false;\n    }\n    const { pathname  } = parsePath(path);\n    return pathname === prefix || pathname.startsWith(prefix + '/');\n}\n\n//# sourceMappingURL=path-has-prefix.js.map","import { addPathPrefix } from './add-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ export function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    if (locale && locale !== defaultLocale && (ignorePrefix || !pathHasPrefix(path.toLowerCase(), `/${locale.toLowerCase()}`) && !pathHasPrefix(path.toLowerCase(), '/api'))) {\n        return addPathPrefix(path, `/${locale}`);\n    }\n    return path;\n}\n\n//# sourceMappingURL=add-locale.js.map","import { removeTrailingSlash } from './remove-trailing-slash';\nimport { addPathPrefix } from './add-path-prefix';\nimport { addPathSuffix } from './add-path-suffix';\nimport { addLocale } from './add-locale';\nexport function formatNextPathnameInfo(info) {\n    let pathname = addLocale(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = removeTrailingSlash(pathname);\n    }\n    if (info.buildId) {\n        pathname = addPathSuffix(addPathPrefix(pathname, `/_next/data/${info.buildId}`), info.pathname === '/' ? 'index.json' : '.json');\n    }\n    pathname = addPathPrefix(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith('/') ? addPathSuffix(pathname, '/') : pathname : removeTrailingSlash(pathname);\n}\n\n//# sourceMappingURL=format-next-pathname-info.js.map","/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ export function getHostname(parsed, headers) {\n    var ref;\n    return (ref = !Array.isArray(headers == null ? void 0 : headers.host) && (headers == null ? void 0 : headers.host) || parsed.hostname) == null ? void 0 : ref.split(':')[0].toLowerCase();\n}\n\n//# sourceMappingURL=get-hostname.js.map","/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ export function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split('/');\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join('/') || '/';\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n}\n\n//# sourceMappingURL=normalize-locale-path.js.map","import { pathHasPrefix } from './path-has-prefix';\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ export function removePathPrefix(path, prefix) {\n    if (pathHasPrefix(path, prefix)) {\n        const withoutPrefix = path.slice(prefix.length);\n        return withoutPrefix.startsWith('/') ? withoutPrefix : `/${withoutPrefix}`;\n    }\n    return path;\n}\n\n//# sourceMappingURL=remove-path-prefix.js.map","import { normalizeLocalePath } from '../../i18n/normalize-locale-path';\nimport { removePathPrefix } from './remove-path-prefix';\nimport { pathHasPrefix } from './path-has-prefix';\nexport function getNextPathnameInfo(pathname, options) {\n    var _nextConfig;\n    const { basePath , i18n , trailingSlash  } = (_nextConfig = options.nextConfig) != null ? _nextConfig : {};\n    const info = {\n        pathname: pathname,\n        trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash\n    };\n    if (basePath && pathHasPrefix(info.pathname, basePath)) {\n        info.pathname = removePathPrefix(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    if (options.parseData === true && info.pathname.startsWith('/_next/data/') && info.pathname.endsWith('.json')) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, '').replace(/\\.json$/, '').split('/');\n        const buildId = paths[0];\n        info.pathname = paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/';\n        info.buildId = buildId;\n    }\n    if (i18n) {\n        const pathLocale = normalizeLocalePath(info.pathname, i18n.locales);\n        info.locale = pathLocale == null ? void 0 : pathLocale.detectedLocale;\n        info.pathname = (pathLocale == null ? void 0 : pathLocale.pathname) || info.pathname;\n    }\n    return info;\n}\n\n//# sourceMappingURL=get-next-pathname-info.js.map","import { detectDomainLocale } from \"../../shared/lib/i18n/detect-domain-locale\";\nimport { formatNextPathnameInfo } from \"../../shared/lib/router/utils/format-next-pathname-info\";\nimport { getHostname } from \"../../shared/lib/get-hostname\";\nimport { getNextPathnameInfo } from \"../../shared/lib/router/utils/get-next-pathname-info\";\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|::1|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nexport class NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyzeUrl();\n    }\n    analyzeUrl() {\n        var ref, ref1, ref2, ref3, ref4;\n        const pathnameInfo = getNextPathnameInfo(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE\n        });\n        this[Internal].domainLocale = detectDomainLocale((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref1 = ref.i18n) == null ? void 0 : ref1.domains, getHostname(this[Internal].url, this[Internal].options.headers));\n        const defaultLocale = ((ref2 = this[Internal].domainLocale) == null ? void 0 : ref2.defaultLocale) || ((ref3 = this[Internal].options.nextConfig) == null ? void 0 : (ref4 = ref3.i18n) == null ? void 0 : ref4.defaultLocale);\n        this[Internal].url.pathname = pathnameInfo.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = pathnameInfo.basePath ?? \"\";\n        this[Internal].buildId = pathnameInfo.buildId;\n        this[Internal].locale = pathnameInfo.locale ?? defaultLocale;\n        this[Internal].trailingSlash = pathnameInfo.trailingSlash;\n    }\n    formatPathname() {\n        return formatNextPathnameInfo({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var ref, ref5;\n        if (!this[Internal].locale || !((ref = this[Internal].options.nextConfig) == null ? void 0 : (ref5 = ref.i18n) == null ? void 0 : ref5.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyzeUrl();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n}\n\n//# sourceMappingURL=next-url.js.map","export * from \"next/dist/compiled/@edge-runtime/cookies\";\n\n//# sourceMappingURL=cookies.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { RemovedUAError, RemovedPageError } from \"../error\";\nimport { RequestCookies } from \"./cookies\";\nexport const INTERNALS = Symbol(\"internal request\");\nexport class NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        validateURL(url);\n        super(url, init);\n        this[INTERNALS] = {\n            cookies: new RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            url: new NextURL(url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            })\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].url;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url.toString();\n    }\n}\n\n//# sourceMappingURL=request.js.map","import { NextURL } from \"../next-url\";\nimport { toNodeHeaders, validateURL } from \"../utils\";\nimport { ResponseCookies } from \"./cookies\";\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var ref;\n    if (init == null ? void 0 : (ref = init.request) == null ? void 0 : ref.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nexport class NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new ResponseCookies(this.headers),\n            url: init.url ? new NextURL(init.url, {\n                headers: toNodeHeaders(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        // @ts-expect-error This is not in lib/dom right now, and we can't augment it.\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", validateURL(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", validateURL(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n}\n\n//# sourceMappingURL=response.js.map","/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ export function relativizeURL(url, base) {\n    const baseURL = typeof base === 'string' ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = `${baseURL.protocol}//${baseURL.host}`;\n    return `${relative.protocol}//${relative.host}` === origin ? relative.toString().replace(origin, '') : relative.toString();\n}\n\n//# sourceMappingURL=relativize-url.js.map","const INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\", \n];\nconst EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nexport function stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nexport function stripInternalSearchParams(searchParams, extended) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        searchParams.delete(name);\n    }\n    if (extended) {\n        for (const name of EXTENDED_INTERNAL_QUERY_NAMES){\n            searchParams.delete(name);\n        }\n    }\n    return searchParams;\n}\n\n//# sourceMappingURL=internal-utils.js.map","import { ensureLeadingSlash } from '../../page-path/ensure-leading-slash';\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ export function normalizeAppPath(route) {\n    return ensureLeadingSlash(route.split('/').reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if (segment.startsWith('(') && segment.endsWith(')')) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment.startsWith('@')) {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === 'page' || segment === 'route') && index === segments.length - 1) {\n            return pathname;\n        }\n        return `${pathname}/${segment}`;\n    }, ''));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ export function normalizeRscPath(pathname, enabled) {\n    return enabled ? pathname.replace(/\\.rsc($|\\?)/, // $1 ensures `?` is preserved\n    '$1') : pathname;\n}\n\n//# sourceMappingURL=app-paths.js.map","export const RSC = 'RSC';\nexport const ACTION = 'Next-Action';\nexport const NEXT_ROUTER_STATE_TREE = 'Next-Router-State-Tree';\nexport const NEXT_ROUTER_PREFETCH = 'Next-Router-Prefetch';\nexport const FETCH_CACHE_HEADER = 'x-vercel-sc-headers';\nexport const RSC_CONTENT_TYPE_HEADER = 'text/x-component';\nexport const RSC_VARY_HEADER = `${RSC}, ${NEXT_ROUTER_STATE_TREE}, ${NEXT_ROUTER_PREFETCH}`;\nexport const FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ], \n];\n\n//# sourceMappingURL=app-router-headers.js.map","import { PageSignatureError } from \"./error\";\nimport { fromNodeHeaders } from \"./utils\";\nimport { NextFetchEvent } from \"./spec-extension/fetch-event\";\nimport { NextRequest } from \"./spec-extension/request\";\nimport { NextResponse } from \"./spec-extension/response\";\nimport { relativizeURL } from \"../../shared/lib/router/utils/relativize-url\";\nimport { waitUntilSymbol } from \"./spec-extension/fetch-event\";\nimport { NextURL } from \"./next-url\";\nimport { stripInternalSearchParams } from \"../internal-utils\";\nimport { normalizeRscPath } from \"../../shared/lib/router/utils/app-paths\";\nimport { FETCH_CACHE_HEADER, NEXT_ROUTER_PREFETCH, NEXT_ROUTER_STATE_TREE, RSC } from \"../../client/components/app-router-headers\";\nclass NextRequestHint extends NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH\n    ],\n    [\n        FETCH_CACHE_HEADER\n    ], \n];\nexport async function adapter(params) {\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    params.request.url = normalizeRscPath(params.request.url, true);\n    const requestUrl = new NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = fromNodeHeaders(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    // Strip internal query parameters off the request.\n    stripInternalSearchParams(requestUrl.searchParams, true);\n    const request = new NextRequestHint({\n        page: params.page,\n        input: String(requestUrl),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    const event = new NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response = await params.handler(request, event);\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = relativizeURL(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE && relativizedRewrite.match(/http(s)?:\\/\\//))) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect) {\n        const redirectURL = new NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (!process.env.__NEXT_NO_MIDDLEWARE_URL_NORMALIZE) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", relativizeURL(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[waitUntilSymbol])\n    };\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nexport function enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== global.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = global.process.env;\n        global.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\n\n//# sourceMappingURL=adapter.js.map","\n        import { adapter, enhanceGlobals } from 'next/dist/esm/server/web/adapter'\n\n        enhanceGlobals()\n\n        var mod = require(\"private-next-pages/api/chat.ts\")\n        var handler = mod.middleware || mod.default;\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/chat\" must export a `default` function');\n        }\n\n        export default function (opts) {\n          return adapter({\n              ...opts,\n              page: \"/api/chat\",\n              handler,\n          })\n        }\n    ","import cjs from './index.js';\n\nexport const createParser = cjs.createParser;\n\nexport default cjs.default;\n","import type { NextRequest } from 'next/server';\r\nimport { createParser, ParsedEvent, ReconnectInterval } from 'eventsource-parser';\r\n\r\nimport { UiMessage } from '../../components/ChatMessage';\r\n\r\n\r\nif (!process.env.OPENAI_API_KEY)\r\n  console.warn('OPENAI_API_KEY has not been provided in this deployment environment. ' +\r\n    'Will use the optional keys incoming from the client, which is not recommended.');\r\n\r\n\r\n// definition for OpenAI wire types\r\n\r\ninterface ChatMessage {\r\n  role: 'assistant' | 'system' | 'user';\r\n  content: string;\r\n}\r\n\r\ninterface ChatCompletionsRequest {\r\n  model: string;\r\n  messages: ChatMessage[];\r\n  temperature?: number;\r\n  top_p?: number;\r\n  frequency_penalty?: number;\r\n  presence_penalty?: number;\r\n  max_tokens?: number;\r\n  stream: boolean;\r\n  n: number;\r\n}\r\n\r\ninterface ChatCompletionsResponseChunked {\r\n  id: string; // unique id of this chunk\r\n  object: 'chat.completion.chunk';\r\n  created: number; // unix timestamp in seconds\r\n  model: string; // can differ from the ask, e.g. 'gpt-4-0314'\r\n  choices: {\r\n    delta: Partial<ChatMessage>;\r\n    index: number; // always 0s for n=1\r\n    finish_reason: 'stop' | 'length' | null;\r\n  }[];\r\n}\r\n\r\n\r\nasync function OpenAIStream(apiKey: string, payload: Omit<ChatCompletionsRequest, 'stream' | 'n'>): Promise<ReadableStream> {\r\n  const encoder = new TextEncoder();\r\n  const decoder = new TextDecoder();\r\n\r\n  const streamingPayload: ChatCompletionsRequest = {\r\n    ...payload,\r\n    stream: true,\r\n    n: 1,\r\n  };\r\n\r\n  const res = await fetch('https://api.openai.com/v1/chat/completions', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${apiKey}`,\r\n    },\r\n    method: 'POST',\r\n    body: JSON.stringify(streamingPayload),\r\n  });\r\n\r\n  return new ReadableStream({\r\n    async start(controller) {\r\n\r\n      // handle errors here, to return them as custom text on the stream\r\n      if (!res.ok) {\r\n        let errorPayload: object = {};\r\n        try {\r\n          errorPayload = await res.json();\r\n        } catch (e) {\r\n          // ignore\r\n        }\r\n        // return custom text\r\n        controller.enqueue(encoder.encode(`OpenAI API error: ${res.status} ${res.statusText} ${JSON.stringify(errorPayload)}`));\r\n        controller.close();\r\n        return;\r\n      }\r\n\r\n      // the first packet will have the model name\r\n      let sentFirstPacket = false;\r\n\r\n      // stream response (SSE) from OpenAI may be fragmented into multiple chunks\r\n      // this ensures we properly read chunks and invoke an event for each SSE event stream\r\n      const parser = createParser((event: ParsedEvent | ReconnectInterval) => {\r\n        // ignore reconnect interval\r\n        if (event.type !== 'event')\r\n          return;\r\n\r\n        // https://beta.openai.com/docs/api-reference/completions/create#completions/create-stream\r\n        if (event.data === '[DONE]') {\r\n          controller.close();\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const json: ChatCompletionsResponseChunked = JSON.parse(event.data);\r\n\r\n          // ignore any 'role' delta update\r\n          if (json.choices[0].delta?.role)\r\n            return;\r\n\r\n          // stringify and send the first packet as a JSON object\r\n          if (!sentFirstPacket) {\r\n            sentFirstPacket = true;\r\n            const firstPacket: ChatApiOutputStart = {\r\n              model: json.model,\r\n            };\r\n            controller.enqueue(encoder.encode(JSON.stringify(firstPacket)));\r\n          }\r\n\r\n          // transmit the text stream\r\n          const text = json.choices[0].delta?.content || '';\r\n          const queue = encoder.encode(text);\r\n          controller.enqueue(queue);\r\n\r\n        } catch (e) {\r\n          // maybe parse error\r\n          controller.error(e);\r\n        }\r\n      });\r\n\r\n      // https://web.dev/streams/#asynchronous-iteration\r\n      for await (const chunk of res.body as any)\r\n        parser.feed(decoder.decode(chunk));\r\n\r\n    },\r\n  });\r\n}\r\n\r\n\r\n// Next.js API route\r\n\r\nexport interface ChatApiInput {\r\n  apiKey?: string;\r\n  messages: UiMessage[];\r\n  model?: string;\r\n  temperature?: number;\r\n  max_tokens?: number;\r\n}\r\n\r\n/**\r\n * The client will be sent a stream of words. As an extra (an totally optional) 'data channel' we send a\r\n * string'ified JSON object with the few initial variables. We hope in the future to adopt a better\r\n * solution (e.g. websockets, but that will exclude deployment in Edge Functions).\r\n */\r\nexport interface ChatApiOutputStart {\r\n  model: string;\r\n}\r\n\r\nexport default async function handler(req: NextRequest) {\r\n\r\n  // read inputs\r\n  const { apiKey: userApiKey, messages, model = 'gpt-4', temperature = 0.5, max_tokens = 2048 }: ChatApiInput = await req.json();\r\n  const chatGptInputMessages: ChatMessage[] = messages.map(({ role, text }) => ({\r\n    role: role,\r\n    content: text,\r\n  }));\r\n\r\n  // select key\r\n  const apiKey = userApiKey || process.env.OPENAI_API_KEY || '';\r\n  if (!apiKey)\r\n    return new Response('Error: missing OpenAI API Key. Add it on the client side (Settings icon) or server side (your deployment).', { status: 400 });\r\n\r\n  const stream: ReadableStream = await OpenAIStream(apiKey, {\r\n    model,\r\n    messages: chatGptInputMessages,\r\n    temperature,\r\n    max_tokens,\r\n  });\r\n\r\n  return new Response(stream);\r\n};\r\n\r\n//noinspection JSUnusedGlobalSymbols\r\nexport const config = {\r\n  runtime: 'edge',\r\n};\r\n","\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction serialize(c) {\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && c.expires && `Expires=${c.expires.toUTCString()}`,\n    \"maxAge\" in c && c.maxAge && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`\n  ].filter(Boolean);\n  return `${c.name}=${encodeURIComponent(c.value ?? \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookieString(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value ?? \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookieString(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookieString(setCookie);\n  const { domain, expires, httponly, maxage, path, samesite, secure } = Object.fromEntries(\n    attributes.map(([key, value2]) => [key.toLowerCase(), value2])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookieString(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => serialize(value2)).join(\"; \")\n    );\n    return this;\n  }\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => serialize(value)).join(\"; \")\n    );\n    return result;\n  }\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a;\n    this._headers = responseHeaders;\n    const setCookie = ((_a = responseHeaders.getAll) == null ? void 0 : _a.call(responseHeaders, \"set-cookie\")) ?? responseHeaders.get(\"set-cookie\") ?? [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookieString(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  delete(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this.set({ name, value: \"\", expires: new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(serialize).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = serialize(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies\n});\n"],"names":["createParser","onParse","isFirstChunk","buffer","startingPosition","startingFieldLength","eventId","eventName","data","reset","feed","chunk","hasBom","slice","BOM","length","position","discardTrailingNewline","character","lineLength","fieldLength","index","parseEventStreamLine","lineBuffer","type","id","event","noValue","field","step","valueLength","value","toString","concat","includes","retry","parseInt","Number","isNaN","every","charCode","charCodeAt","exports","j","PageSignatureError","Error","constructor","page","RemovedPageError","RemovedUAError","fromNodeHeaders","object","headers","Headers","key","Object","entries","values","Array","isArray","v","undefined","append","splitCookiesString","cookiesString","start","ch","lastComma","nextStart","cookiesSeparatorFound","cookiesStrings","pos","skipWhitespace","test","charAt","push","substring","toNodeHeaders","result","toLowerCase","validateURL","url","String","URL","error","cause","responseSymbol","Symbol","passThroughSymbol","waitUntilSymbol","FetchEvent","_request","respondWith","response","Promise","resolve","passThroughOnException","waitUntil","promise","NextFetchEvent","params","request","sourcePage","detectDomainLocale","domainItems","hostname","detectedLocale","domainItem","item","ref","ref1","domainHostname","domain","split","defaultLocale","locales","some","locale","removeTrailingSlash","route","replace","parsePath","path","hashIndex","indexOf","queryIndex","hasQuery","pathname","query","hash","addPathPrefix","prefix","startsWith","addPathSuffix","suffix","pathHasPrefix","addLocale","ignorePrefix","formatNextPathnameInfo","info","buildId","trailingSlash","basePath","endsWith","getHostname","parsed","host","normalizeLocalePath","pathnameParts","splice","join","removePathPrefix","withoutPrefix","getNextPathnameInfo","options","_nextConfig","i18n","nextConfig","parseData","paths","pathLocale","REGEX_LOCALHOST_HOSTNAME","parseURL","base","Internal","NextURL","input","baseOrOpts","opts","analyzeUrl","ref2","ref3","ref4","pathnameInfo","domainLocale","domains","formatPathname","forceLocale","formatSearch","search","ref5","searchParams","port","protocol","href","origin","password","username","toJSON","for","clone","INTERNALS","NextRequest","Request","init","cookies","RequestCookies","geo","ip","nextUrl","bodyUsed","cache","credentials","destination","fromEntries","integrity","keepalive","method","mode","redirect","referrer","referrerPolicy","signal","ua","response_INTERNALS","REDIRECTS","Set","handleMiddlewareField","keys","set","NextResponse","Response","body","ResponseCookies","ok","redirected","status","statusText","json","has","initObj","rewrite","next","relativizeURL","baseURL","relative","INTERNAL_QUERY_NAMES","EXTENDED_INTERNAL_QUERY_NAMES","stripInternalSearchParams","extended","name","delete","normalizeRscPath","enabled","NextRequestHint","adapter_FLIGHT_PARAMETERS","adapter","isEdgeRendering","self","__BUILD_MANIFEST","requestUrl","isDataReq","requestHeaders","flightHeaders","Map","param","get","defineProperty","enumerable","handler","rewriteUrl","relativizedRewrite","redirectURL","finalResponse","middlewareOverrideHeaders","overwrittenHeaders","all","getUnsupportedModuleErrorMessage","module","__import_unsupported","moduleName","proxy","Proxy","_obj","prop","construct","apply","_target","_this","args","enhanceGlobals","process","__webpack_require__","g","env","globalThis","configurable","_ENTRIES","middleware_instrumentation","register","err","message","mod","middleware","default","next_edge_function_loaderabsolutePagePath_private_next_pages_2Fapi_2Fchat_ts_page_2Fapi_2Fchat_rootDir_C_3A_5CWork_5CApps_5CFetchGPT_","dist","OpenAIStream","apiKey","payload","encoder","TextEncoder","decoder","TextDecoder","streamingPayload","stream","n","res","fetch","Authorization","JSON","stringify","ReadableStream","controller","errorPayload","e","enqueue","encode","close","sentFirstPacket","parser","parse","choices","delta","role","firstPacket","model","text","content","queue","decode","req","userApiKey","messages","temperature","max_tokens","chatGptInputMessages","map","OPENAI_API_KEY","console","warn","config","runtime","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","call","__toCommonJS","src_exports","serialize","c","attrs","expires","toUTCString","maxAge","secure","httpOnly","sameSite","filter","Boolean","encodeURIComponent","parseCookieString","cookie","pair","splitAt","decodeURIComponent","parseSetCookieString","setCookie","attributes","httponly","maxage","samesite","value2","Date","parseSameSite","compact","t","newT","__export","target","SAME_SITE","string","_parsed","_headers","header","iterator","size","getAll","_a","_","names","clear","responseHeaders","cookieStrings","cookieString","normalizeCookie","bag","serialized","now"],"sourceRoot":""}